%Lifecycle::Lite =
(
  Name		=> 'Lifecycle Lite', # don't worry about this

# These are true globals. Overriding these per Workflow does not make sense
  Quiet		=> 0,
  Verbose	=> 1,
  Debug		=> 0,
  Dummy		=> 0,   # Just run the framework. Used only for specialised
			# debugging (of the LifeCycle agent itself)
  Jitter	=> 0.0, # Spread delay-times for workflow events by this factor
  CycleSpeedup	=>   1, # speed up time. 1 => real-time, 24 => one day per hour
  Suspend	=>   0, # set to 1 to suspend new workflows from starting,
                        # but allow existing workflows to run to completion
  StopOnIdle	=>   1, # spit the dummy if I have no work to do
  NJobs		=>  25, # degree of parallelism

# Also true globals, but these make sense to override. Providing values here
# is just a convenient way to avoid having to repeat them everywhere.
  CycleTime	=> 999_999_999, # 30 years!
  NCycles	=>  -1, # < 0 => infinite, > 0 to limit

  KeepInputs	=> 0, # keep the  input files of successful jobs?
  KeepOutputs	=> 0, # keep the output files of successful jobs?
  KeepLogs	=> 0, # keep the    log files of successful jobs?
  KeepFailedInputs	=> 1, # keep the  input files of failed jobs?
  KeepFailedOutputs	=> 1, # keep the output files of failed jobs?
  KeepFailedLogs	=> 1, # keep the    log files of failed jobs?

  StatsFrequency => 3600,

  Templates =>
  {
    'IPv6Workflow' =>
    {
      CycleTime => 999_999_999, # 30 years!
      NCycles	=> -1,

      Events    => [ 'getInputFileSize', 'putFile', 'checkFile', 'clearFile', 'restartCycle' ],
      Intervals => {
        'putFile'   => undef,
        'checkFile' =>     1,
        'clearFile' =>     1,
        'restartCycle'	=> 10,
      },

      InputFile => '/data/ipv6/PHEDEX/Testbed/LifeCycle/IPV6/data/file-100.gz',
      OutputFile => 'file-%ID%.gz',
#     OutputFile => 'file-CernVM.gz',
      RemoteProtocol => 'gsiftp://',
    },
    'IPv6MeshWorkflow' =>
    {
      CycleTime => 999_999_999, # 30 years!
      NCycles	=> -1,

#     Use IPv4 instead of IPv6?
      UseIPv4 => 0,

#     JobManager timeout
      Timeout => 14400,
      Events    => [ 'getInputFileSize', 'putFile', 'checkFile', 'clearFile', 'restartCycle' ],
      Intervals => {
        'putFile'	=> undef,
        'checkFile'	=>     1,
        'clearFile'	=>     1,
        'restartCycle'	=>    10,
      },

      OutputFile => 'file-%ID%.gz',
    },
    'CheckProxy' =>
    {
      CycleTime => 600,
      Incarnations => 1,
      NCycles   =>    1,
      Events => [ 'CheckProxy' ],
      GracePeriod => 600,
    },
  },

# Default values are applied if they are not defined per Template or Workflow
# This allows setting parameters for all Templates, rather than repeating them
  Defaults =>
  {
    Exec => {
      'CheckProxy'	 => 'CheckProxy.pl',
      'getFiles'	 => 'ipv6GetFiles.pl',
      'putFile'		 => 'ipv6PutFile.pl',
      'getInputFileSize' => 'ipv6GetInputFileSize.pl',
      'restartCycle'	 => 'ipv6RestartCycle.pl',
      'checkFile'	 => 'ipv6CheckFile.pl',
      'clearFile'	 => 'ipv6ClearFile.pl',
    },
  },

  Workflows =>
  [
#    {
#      Name	=> 'CernVM to Chicago',
#      Template	=> 'IPv6Workflow',
#      RemoteHost     => 'ml-chi-v6.uslhcnet.org',
#      RemotePath     => '/home/ipv6user/wildish',
#      UberFTPHost    => 'ml-chi-v4.uslhcnet.org',
#      Suspend	     => 1,
#    },
#    {
#      Name	=> 'CernVM to PIC',
#      Template	=> 'IPv6Workflow',
#      RemoteHost     => 'hepix01-v6.pic.es',
#      RemotePath     => '/home/ipv6user/wildish',
#      UberFTPHost    => 'hepix01-v4.pic.es',
#      Suspend	     => 1,
#    },
#    {
#      Name	=> 'CernVM to Imperial',
#      Template	=> 'IPv6Workflow',
#      RemoteHost     => 'hepix00-v6.grid.hep.ph.ic.ac.uk',
#      RemotePath     => '/srv/localstage/ipv6test/wildish',
#      UberFTPHost    => 'hepix00.grid.hep.ph.ic.ac.uk',
#      Suspend	     => 1,
#    },
#    {
#      Name	=> 'CernVM to CERN',
#      Template	=> 'IPv6Workflow',
#      RemoteHost     => 'v6hepix.cern.ch',
#      RemotePath     => '/home/ipv6user/wildish',
#      UberFTPHost    => 'v6hepix.cern.ch',
#      Suspend	     => 0,
#    },
#    {
#      Name	=> 'CernVM to Caltech',
#      Template	=> 'IPv6Workflow',
#      RemoteHost     => 'hermes-gva.uslhcnet.org',
#      RemotePath     => '/home/wildish/ipv6user',
#      Suspend	     => 1,
#    },
#    {
#      Name	=> 'CernVM to INFN',
#      Template	=> 'IPv6Workflow',
#      RemoteHost     => 'seipersei.mi.infn.it',
#      RemotePath     => '/var/tmp/wildish',
#      Suspend	     => 1,
#    },
#    {
#      Name	=> 'CernVM to DESY',
#      Template	=> 'IPv6Workflow',
#      RemoteHost     => 'hepix01.desy.de',
#      RemotePath     => '/scratch/ipv6user/wildish',
#      Suspend	     => 2,
#    },
#    {
#      Name	=> 'CernVM to GRIDKA',
#      Template	=> 'IPv6Workflow',
#      RemoteHost     => 'hepix01-v6.gridka.de',
##     RemoteHost     => 'hepix01-v4.gridka.de',
#      RemotePath     => '/var/tmp/hepix_ipv6/wildish',
#      UberFTPHost    => 'hepix01-v4.gridka.de',
#      Suspend	     => 1,
#    },
#    {
#      Name	=> 'CernVM to FZU',
#      Template	=> 'IPv6Workflow',
#      RemoteHost     => 'ui.ipv6.farm.particle.cz',
#      RemotePath     => '/tmp/wildish',
#      Suspend	     => 1,
#    },
#    {
#      Name	   => 'CernVM to GARR',
#      Template	=> 'IPv6Workflow',
#      RemoteHost     => 'hepix-ui.dir.garr.it',
#      RemotePath     => '/home/ipv6user/wildish',
#      Suspend	     => 1,
#    },
    { Name     => 'CheckProxy', },
    {
      Name     => 'CheckVomsProxy',
      Template => 'CheckProxy',
      Proxy    => '/data/proxy/voms.cert',
    },
  ],
);

@Sources = (
#  {
#    Name	   => 'CERN',
#    RemoteHost     => 'v6hepix.cern.ch',
#    RemotePath     => '/home/ipv6user/wildish',
#  },
  {
    Name	   => 'Caltech',
    RemoteHost     => 'hermes-gva.uslhcnet.org',
    RemotePath     => '/home/wildish/ipv6user',
  },
  {
    Name	   => 'Chicago',
    RemoteHost     => 'ml-chi-v6.uslhcnet.org',
    RemotePath     => '/home/ipv6user/wildish',
    UberFTPHost    => 'ml-chi-v4.uslhcnet.org',
  },
  {
    Name	   => 'GRIDKA',
    RemoteHost     => 'hepix01-v6.gridka.de',
#   RemoteHost     => 'hepix01-v4.gridka.de',
    RemotePath     => '/var/tmp/hepix_ipv6/wildish',
    UberFTPHost    => 'hepix01-v4.gridka.de',
  },
  {
    Name	   => 'DESY',
    RemoteHost     => 'hepix01.desy.de',
    RemotePath     => '/scratch/ipv6user/wildish',
  },
  {
    Name	   => 'Glasgow',
    RemoteHost     => 'dev011-v6.gla.scotgrid.ac.uk',
    RemotePath	   => '/home/ipv6user/wildish',
    UberFTPHost    => 'dev011-v4.gla.scotgrid.ac.uk',
  },
  {
    Name	   => 'Imperial',
    RemoteHost     => 'hepix00-v6.grid.hep.ph.ic.ac.uk',
    RemotePath	   => '/srv/localstage/ipv6test/wildish',
    UberFTPHost    => 'hepix00.grid.hep.ph.ic.ac.uk',
  },
  {
    Name	   => 'INFN',
    RemoteHost     => 'seipersei.mi.infn.it',
    RemotePath     => '/var/tmp/wildish',
  },
#  {
#    Name	   => 'GARR',
#    RemoteHost     => 'hepix-ui.dir.garr.it',
#    RemotePath     => '/home/ipv6user/wildish',
#  },
  {
    Name	   => 'FZU',
    RemoteHost     => 'ui.ipv6.farm.particle.cz',
    RemotePath     => '/tmp/wildish',
  },
  {
    Name	   => 'PIC',
    RemoteHost     => 'hepix01-v6.pic.es',
    RemotePath     => '/home/ipv6user/wildish',
    UberFTPHost    => 'hepix01-v4.pic.es',
  },
);

{
  my $first = 0;
  foreach my $src ( @Sources ) {
    $src->{InputFile} = 'src/file-1000.gz' unless $src->{InputFile};
    foreach my $dst ( @Sources ) {
      my $s = $src->{Name};
      my $d = $dst->{Name};
#     next unless (
#       ( $s eq 'Caltech' && $d eq 'FZU' ) ||
#       ( $s eq 'FZU'     && $d eq 'Caltech' ) ||
#       ( $s eq 'INFN'    && $d eq 'GARR' ) ||
#       ( $s eq 'GARR'    && $d eq 'INFN' ) ||
#       ( $s eq 'CERN'    && $d eq 'GRIDKA' ) ||
#       ( $s eq 'GRIDKA'  && $d eq 'CERN' )
#     );
      next if $src->{Name} eq $dst->{Name};
      print "Workflow: from $src->{Name} to $dst->{Name}\n";
      my $h;
      map { $h->{$_} = $dst->{$_} } keys %{$dst};
      $h->{Name} = $src->{Name} . ' to ' . $dst->{Name};
      $h->{InputUberFTPHost} = $src->{UberFTPHost} if $src->{UberFTPHost};
      $h->{InputHost}	     = $src->{RemoteHost};
      $h->{InputFileSize}    = $src->{InputFileSize} if $src->{InputFileSize};
      $h->{RemoteProtocol}   = 'gsiftp://' unless $h->{RemoteProtocol};
      $h->{InputFile}        = $h->{RemoteProtocol} . $src->{RemoteHost} . $src->{RemotePath} . '/' .$src->{InputFile};
      $h->{CycleTime}  = 999_999_999; # 30 years!
      $h->{Template}   = 'IPv6MeshWorkflow';
      $h->{OutputFile} = 'file-' . $src->{Name} . '-%ID%.gz',
#     $h->{Suspend} = 1;
      push @{$Lifecycle::Lite{Workflows}}, $h;
    }
  }
}

1;
